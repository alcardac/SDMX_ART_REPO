//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.18052
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISTATRegistry.MyService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.Service1Soap")]
    public interface Service1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserByCredentials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ISTATRegistry.MyService.User GetUserByCredentials(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CleanAgenciesRelationForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CleanAgenciesRelationForUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateUserAgenciesRelation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateUserAgenciesRelation(int userId, string agencySchemeId, string agencySchemeAgencyId, string agencySchemeVersion, string agency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertUser(string username, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCodesIdByUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetCodesIdByUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateUser(int id, string username, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckIfUserExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckIfUserExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCodelistId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetCodelistId(string id, string agency, bool version1IsPresent, int version1, bool version2IsPresent, int version2, bool version3IsPresent, int version3, ref int foundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertDsdCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertDsdCode(string id, string codelistId, int parentCode, ref int insertedId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDsdCodeId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetDsdCodeId(int codelistId, string codeId, ref int foundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertLocalizedString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertLocalizedString(int itemId, string text, string type, string language, ref int foundId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertOrderAnnotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertOrderAnnotation(int itemId, int order);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string nameField;
        
        private string surnameField;
        
        private UserAgency[] agenciesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
                this.RaisePropertyChanged("surname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public UserAgency[] agencies {
            get {
                return this.agenciesField;
            }
            set {
                this.agenciesField = value;
                this.RaisePropertyChanged("agencies");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserAgency : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string langField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
                this.RaisePropertyChanged("lang");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("text");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : ISTATRegistry.MyService.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<ISTATRegistry.MyService.Service1Soap>, ISTATRegistry.MyService.Service1Soap {
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ISTATRegistry.MyService.User GetUserByCredentials(string username, string password) {
            return base.Channel.GetUserByCredentials(username, password);
        }
        
        public bool CleanAgenciesRelationForUser(int userId) {
            return base.Channel.CleanAgenciesRelationForUser(userId);
        }
        
        public bool CreateUserAgenciesRelation(int userId, string agencySchemeId, string agencySchemeAgencyId, string agencySchemeVersion, string agency) {
            return base.Channel.CreateUserAgenciesRelation(userId, agencySchemeId, agencySchemeAgencyId, agencySchemeVersion, agency);
        }
        
        public bool DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public bool InsertUser(string username, string password, string name, string surname) {
            return base.Channel.InsertUser(username, password, name, surname);
        }
        
        public string[] GetCodesIdByUser(int userId) {
            return base.Channel.GetCodesIdByUser(userId);
        }
        
        public bool UpdateUser(int id, string username, string password, string name, string surname) {
            return base.Channel.UpdateUser(id, username, password, name, surname);
        }
        
        public System.Data.DataTable GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Data.DataTable GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public bool CheckIfUserExists(string username) {
            return base.Channel.CheckIfUserExists(username);
        }
        
        public bool GetCodelistId(string id, string agency, bool version1IsPresent, int version1, bool version2IsPresent, int version2, bool version3IsPresent, int version3, ref int foundId) {
            return base.Channel.GetCodelistId(id, agency, version1IsPresent, version1, version2IsPresent, version2, version3IsPresent, version3, ref foundId);
        }
        
        public bool InsertDsdCode(string id, string codelistId, int parentCode, ref int insertedId) {
            return base.Channel.InsertDsdCode(id, codelistId, parentCode, ref insertedId);
        }
        
        public bool GetDsdCodeId(int codelistId, string codeId, ref int foundId) {
            return base.Channel.GetDsdCodeId(codelistId, codeId, ref foundId);
        }
        
        public bool InsertLocalizedString(int itemId, string text, string type, string language, ref int foundId) {
            return base.Channel.InsertLocalizedString(itemId, text, type, language, ref foundId);
        }
        
        public bool InsertOrderAnnotation(int itemId, int order) {
            return base.Channel.InsertOrderAnnotation(itemId, order);
        }
    }
}
