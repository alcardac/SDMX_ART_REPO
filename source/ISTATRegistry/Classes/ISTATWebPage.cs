using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Threading;
using System.Globalization;

namespace ISTATRegistry.Classes
{
    public partial class ISTATWebPage : System.Web.UI.Page
    {


        public ICollection<CultureInfo> AvailableLocale { get { return SDMX_Dataloader.Main.Web.I18NSupport.Instance.AvailableLocales.Keys; } }
        public CultureInfo CurrentLocale { get { return System.Threading.Thread.CurrentThread.CurrentUICulture; } }

        //protected override void OnError(EventArgs e)
        //{
        //    LatestError error = new LatestError() { Url = Request.Url.ToString(), Description = Server.GetLastError().ToString() };

        //    Session["LatestError"] = error;

        //    //String message = "<font face=verdana color=red>"
        //    //                       + "<h4>" + Request.Url.ToString() + "</h4>"
        //    //                       + "<pre><font color='red'>" + Server.GetLastError().ToString() + "</pre>"
        //    //                       + "</font>";

        //    //Response.Write(message);
        //    //Server.ClearError();
        //}

        private void Page_Error(object sender, EventArgs e)
        {
            // Get last error from the server
            //Exception exc = Server.GetLastError();

            Server.Transfer("GenericErrorPage.aspx", true);

            //// Handle exceptions generated by Button 1
            //if (exc is InvalidOperationException)
            //{
            //    // Pass the error on to the Generic Error page
            //    Server.Transfer("GenericErrorPage.aspx", true);
            //}

            //// Handle exceptions generated by Button 2
            //else if (exc is ArgumentOutOfRangeException)
            //{
            //    // Give the user some information, but
            //    // stay on the default page
            //    Response.Write("<h2>Default Page Error</h2>\n");
            //    Response.Write("<p>Provide as much information here as is " +
            //      "appropriate to show to the client.</p>\n");
            //    Response.Write("Return to the <a href='Default.aspx'>" +
            //        "Default Page</a>\n");

            //    // Log the exception and notify system operators
            //    ExceptionUtility.LogException(exc, "DefaultPage");
            //    //ExceptionUtility.NotifySystemOps(exc);

            //    // Clear the error from the server
            //    Server.ClearError();
            //}
            //else
            //{
            //    // Pass the error on to the default global handler
            //}
        }

        protected override void OnPreRender(EventArgs e)
        {
            Utils.ExecuteStaticScript(this);
        }

        protected override void InitializeCulture()
        {
            CultureInfo culture;

            culture = LocaleResolver.GetCookie(HttpContext.Current);

            Thread.CurrentThread.CurrentUICulture = culture;
            Thread.CurrentThread.CurrentCulture = culture;


            // Save cookie
            LocaleResolver.SendCookie(culture, HttpContext.Current);

            //base.InitializeCulture();
        }



    }
}